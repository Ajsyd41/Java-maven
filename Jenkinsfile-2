pipeline {
  agent {
		docker
		{
           image 'maven:3.9.0'
            args '-v /root/.m2:/root/.m2'
         }
	  }
	  options{

        timestamps()
        timeout(time: 20,unit: 'MINUTES')
    }
  stages {

   stage('SCM Checkout'){
        steps{

            checkout scm
        }
     }
	 
 	stage('Test') { 
      steps {

        echo 'Test Appplication...' 
         sh ' mvn clean test'
         junit '**/target/surefire-reports/TEST-*.xml'

      }
    }
     stage('Package') { 
      steps {

        echo 'Package Appplication...'
        sh 'mvn clean package -Dmaven.test.skip=true'

      }
    }
    stage('SonarQube analysis') {
        steps {
           withSonarQubeEnv() {

               sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.7.0.1746:sonar'

             }
        }
     }
	 stage("Quality Gate"){
	 steps
	 {
        timeout(time: 1, unit: 'HOURS') {
         script{
           def qg = waitForQualityGate() 
              if (qg.status != 'OK') {
                error "Pipeline aborted due to quality gate failure: ${qg.status}"
           }
         }
       }
	   }
     }
	 stage('SCA analysis') {
        steps {
           withSonarQubeEnv('sonar-api') {

               sh 'mvn org.cyclonedx:cyclonedx-maven-plugin:2.7.9:makeAggregateBom'

             }
        }
     }
	
  }
}
